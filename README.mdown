#Analyse texts
To compare different texts it is necessary
to get key figures to compare the texts based on the given key figures.
For example you can compare texts by the frequency of verbs and adjectives.
There are many different possibilities for key figures to compare texts.
This library should implement some algorithm to get different key figures.
The main objective is to make each algorithm independend from the text and the
language of the text and give an toolset to automatically compare texts.

##todo's
* Add tests for text class
* Add tests for wordclass
* Create a class representing each object in a text they are not a word
(such as punctuations)
* Add tests for interpunction class
* Create a class representing each sentences in text
* Add tests for sentences class
* Implement cologne phonetics algorithm (word algorithm)
* Add tests for cologne phonetics algorithm

##Implemented algorithm
###Stemmer
Stemmer are parsers they use the wordbase to get some key figures for each word.
####Porter
The porter algorithm get the combination of consonants and vocals for each word.
For example:
The word _linguistic_ is based on 6 consonants (*C*) and 4 vocals (*V*),
his format is CVCCVVCCVC, that can be summerized to CVCVCV.
This is one of the simplest phonetic analyses.
It is usefull to compare the sound of words.

##Unittests
Each project is easier if there are unit test availeable.
Therefore this library has tests too and this from the beginning.
To check if all tests are still running, even if there where are some changes,
you can run
`cd /path/to/project/Tests/
phpunit`

The only dependence for tests is a runnable PHPUnit installation.

